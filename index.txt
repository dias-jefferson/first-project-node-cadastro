const express = require('express')
const uuid = require('uuid')

const app = express()
const port = 3000
app.use(express.json())

const users = []

//Método de busca de dados no servidor
app.get('/users', (request, response) => {
    return response.json(users)
})

//Método para criar e salvar informações no servidor
app.post('/users', (request, response) => {
    const {name, age} = request.body

    const user = {id: uuid.v4(), name, age}

    users.push(user)

    return response.status(201).json(user)

})

//Método para alterar informações no servidor
app.put('/users/:id', (request, response) => {
    const { id } = request.params
    const {name, age} = request.body

    const updatedUser = {id, name, age}
    const index = users.findIndex(user => user.id === id)

    if (index < 0) {
        return response.status(404).json({ error: "User not found"})
    }

    users[index] = updatedUser

    return response.json(updatedUser)
})

//Método para exclusão de informações no servidor
app.delete('/users/:id', (request, response) => {
    const { id } = request.params

    const index = users.findIndex(user => user.id === id)

    if (index < 0) {
        return response.status(404).json({ error: "User not found"})
    }

    users.splice(index,1)

    return response.status(204).json()
})

app.listen(port, () => {
    console.log(`😎 Server started on port ${port}`)
})
